@model Models.ViewModel.ResetPasswordViewModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Code Hub</title>


    <!-- Prevent the demo from appearing in search engines -->
    <meta name="robots" content="noindex">

    <!-- App CSS -->
    <link type="text/css" href="~/Content/app.css" rel="stylesheet">
    <link type="text/css" href="~/Content/app.rtl.css" rel="stylesheet">

    <!-- Simplebar -->
    <link type="text/css" href="~/Vendors/simplebar.css" rel="stylesheet">
</head>

<body>
    <div class="mdk-drawer-layout js-mdk-drawer-layout" data-fullbleed data-push data-has-scrolling-region>
        <div class="mdk-drawer-layout__content mdk-header-layout__content--scrollable" style="overflow-y: auto;" data-simplebar data-simplebar-force-enabled="true">


            <div class="container h-vh d-flex justify-content-center align-items-center flex-column">
                <div class="d-flex justify-content-center align-items-center mb-3">
                    <a href="index.html" class="drawer-brand-circle mr-2">C</a>
                    <h2 class="ml-2 text-bg mb-0"><strong>CodeHub</strong></h2>
                </div>
                <div class="w-100">
                    <div class="card card-forgot-password mx-auto">
                        <div class="card-body">
                            @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                              
                                @Html.ValidationSummary("", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.Code)
                            <div class="form-row">
                                <div class="col-md-10">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="col-md-10">

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="col-md-10">

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ConformPassword, new { @class = "control-label" })
                                        @Html.PasswordFor(m => m.ConformPassword, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="col-md-12">

                                    <div class="form-group">
                                        <input type="submit" class="btn btn-primary" value="Reset" />
                                    </div>
                                </div>
                            </div>
                            }

                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>

    <script>
        (function() {
            'use strict';

            // Self Initialize DOM Factory Components
            domFactory.handler.autoInit();
        });
    </script>
</body>

</html>



